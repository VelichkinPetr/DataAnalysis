import numpy as np

'''
Задача 1

 Дан массив температур (°C) в одно и то же время в разные дни:
 temps = np.array([15.2, 16.8, 14.5, 17.0, 16.1])
 Вычислите (без циклов): сумму, среднее, минимум и максимум массива.
'''
temps = np.array([15.2, 16.8, 14.5, 17.0, 16.1])
print('1.сумму >>', temps.sum())
print('2.среднее >>',temps.mean())
print('3.минимум >>', temps.min())
print('4.максимум >>',temps.max())

"""
 Задача 2

 Даны два вектора — показания относительной влажности (%) двух датчиков в одном и том же наборе измерений:
 h1 = np.array([45, 50, 47])
 h2 = np.array([48, 46, 52])
 Вычислите (без циклов): 
 поэлементную сумму h1 + h2 , 
 поэлементное произведение h1 * h2 
 и скалярное произведение h1·h2 
"""
h1 = np.array([45, 50, 47])
h2 = np.array([48, 46, 52])
print()
print('1.поэлементную сумму >>', h1+h2)
print('2.поэлементное произведение >>', h1*h2)
print('3.скалярное произведение >>', np.dot(h1,h2))

"""
 Задача 3

 Дана матрица — показания температуры по трём сенсорам в течение 4 временных точек (строки — моменты времени, столбцы — сенсоры):
 X = np.array([
 [20.1, 20.3, 19.8],
 [21.0, 20.7, 20.2],
 [19.5, 19.8, 19.3],
 [20.8, 21.1, 20.6]
 ])
 Вычислите (без циклов):
 1. Среднее по столбцам.
 2. Сумму по строкам.
 3. Дисперсию по столбцам с 
ddof=1 .
 4. Найдите индекс столбца (сенсора) с минимальной дисперсией
"""
X = np.array([
 [20.1, 20.3, 19.8],
 [21.0, 20.7, 20.2],
 [19.5, 19.8, 19.3],
 [20.8, 21.1, 20.6]
 ])
print()
print('1.Среднее по столбцам >>', X.mean(axis=0))
print('2.Сумму по строкам >>', X.sum(axis=1))
print('3.Дисперсию по столбцам >>', X.var(ddof=1, axis=0))
print('4.Найдите индекс столбца (сенсора) с минимальной дисперсией >>', np.argmin(X.var(ddof=1,axis=0)))

"""
 Задача 4

 Дана произвольная матрица:

 1. Найдите по столбцам 
col_min и col_max (минимум и максимум в каждой колонке).
 2. Вычислите 
col_range = col_max - col_min (размах значений в каждой колонке).
 3. Вычтите из каждого столбца его 
col_min и поделите значения в каждом столбце на должны быть в диапазоне 
col_range , в результате значения в каждом столбце
 [0, 1] и при суммировании давать 1 (сумма значений в каждом столбца, должна быть равна единице)
 
 p.s. №3 немного не верен
"""
X = np.array([
 [20.1, 20.3, 19.8],
 [21.0, 20.7, 20.2],
 [19.5, 19.8, 19.3],
 [20.8, 21.1, 20.6]
 ])
print()
print('1.минимум в каждой колонке >>', X.min(axis=0), 'и максимум в каждой колонке >>', X.max(axis=0))
print('2.размах значений в каждой колонке >>', X.max(axis=0) - X.min(axis=0))
            #   столбец - мин в этом столбце / на размах в этом столбце
print('3.')
[(
        print( (X[:,i] - X.min(axis=0)[i]) / (X.max(axis=0) - X.min(axis=0))[i] )
) for i in range(3)
]


"""
Задача 5

 Дана таблица измерений pH (кислоты) трёх реакционных образцов, проведённых для 6 проб (строки — пробы, столбцы — образцы):
ph = np.array([
 [7.1, 7.4, 7.0],
 [6.9, 7.2, 7.1],
 [7.3, 7.5, 7.2],
 [7.0, 7.1, 6.8],
 [6.8, 6.9, 6.7],
 [7.4, 7.6, 7.3]
 ])
 Вычислите (без циклов):
 1. Среднее pH каждой пробы (по строкам).
 2. Сумму значений pH для каждого образца (по столбцам).
 3. Общую сумму значений pH для каждой пробы.
 4. Дисперсию по образцам с 
"""
ph = np.array([
 [7.1, 7.4, 7.0],
 [6.9, 7.2, 7.1],
 [7.3, 7.5, 7.2],
 [7.0, 7.1, 6.8],
 [6.8, 6.9, 6.7],
 [7.4, 7.6, 7.3]
 ])

print()
print('1.Среднее pH каждой пробы (по строкам) >>', ph.mean(axis=1))
print('2.Сумму значений pH для каждого образца (по столбцам) >>', ph.sum(axis=0))
print('3.Общую сумму значений pH для каждой пробы >>', ph.sum(axis=1))
print('4.Дисперсию по образцам >>', ph.var(ddof=1, axis=0))

"""
Задача 6

 Даны ежедневные значения энергопотребления (кВт·ч) для трёх домов за неделю (строки — дни Mon..Sun, столбцы — дома H1, H2, H3):
 consumption = np.array([
 [ 8,  6,  5],  # Mon
 [10,  7,  6],  # Tue
 [ 9,  8,  7],  # Wed
 [11, 10,  9],  # Thu
 [14, 12, 11],  # Fri
 [16, 15, 13],  # Sat
 [12, 11, 10]   # Sun
 ])
 days = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun']
 houses = ['H1','H2','H3']
 Вычислите (без циклов):
 1. Общее энергопотребление за неделю для каждого дома (по столбцам).
 2. Общее потребление по дням (по строкам).
 3. Среднее энергопотребление в каждом доме (по столбцам).
 4. Назовите день с наибольшим суммарным потреблением (по строкам).
 5. Дисперсию потребления в каждом доме 
ddof=1 .
 6. Опираясь на рассчитанные средние и дисперсии, какой дом вы бы назвали наиболее стабильным по потреблению и почему? (ответ можно
 получить, сравнив дисперсии домов)
"""

consumption = np.array([
 [ 8,  6,  5],  # Mon
 [10,  7,  6],  # Tue
 [ 9,  8,  7],  # Wed
 [11, 10,  9],  # Thu
 [14, 12, 11],  # Fri
 [16, 15, 13],  # Sat
 [12, 11, 10]   # Sun
 ])
days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
houses = ['H1', 'H2', 'H3']

print()
print('1.Общее энергопотребление за неделю для каждого дома (по столбцам) >>', consumption.sum(axis=0))
print('2.Общее потребление по дням (по строкам) >>',consumption.sum(axis=1))
print('3.Среднее энергопотребление в каждом доме (по столбцам) >>',consumption.mean(axis=0))
print('4.Назовите день с наибольшим суммарным потреблением (по строкам) >>',days[np.argmax(consumption.sum(axis=1))])
print('5.Дисперсию потребления в каждом доме >>', consumption.var(ddof=1, axis=0))
print('6.Опираясь на рассчитанные средние >>',consumption.mean(axis=0), 'и дисперсии >>',consumption.var(ddof=1, axis=0),
      '\n, какой дом вы бы назвали наиболее стабильным по потреблению и почему? (ответ можно получить, сравнив дисперсии домов).\n'
      '>> Дом H1, т.к. наименьшая дисперсия!')


""" 
Задача 7

 Даны суточные показания четырёх типов промышленных датчиков (столбцы: TempSensor , PressureSensor ,  FlowSensor , VibrationSensor ) за 7 дней:

 
Вычислите (без циклов):
 1. Общую сумму показаний каждой группы датчиков (по столбцам).
 2. Среднее показание по каждой группе (по столбцам).
 3. Дисперсию по каждой группе 
ddof=1 .
 4. Определите группу датчиков с наибольшей суммарной величиной.
 
 5. Если задача — выбрать одну группу датчиков для приоритетного мониторинга (цель — максимизировать среднее информативное значение при
 умеренной стабильности), какую группу вы бы рекомендовали и почему? (ответ обосновывается сравнениями средних и дисперсий)
"""

sensors = np.array([
 [15, 101, 20, 0.5],
 [16, 100, 21, 0.6],
 [15, 102, 19, 0.4],
 [17, 103, 22, 0.7],
 [18, 104, 23, 0.6],
 [19, 105, 24, 0.8],
 [17, 103, 22, 0.5]
 ])
types = ['TempSensor','PressureSensor','FlowSensor','VibrationSensor']

print()
print('1.Общую сумму показаний каждой группы датчиков (по столбцам) >>', sensors.sum(axis=0))
print('2.Среднее показание по каждой группе (по столбцам) >>', sensors.mean(axis=0))
print('3.Дисперсию по каждой группе >>', sensors.var(ddof=1, axis=0))
print('4.Определите группу датчиков с наибольшей суммарной величиной >>',types[np.argmax(sensors.sum(axis=0))])
print('5.Если задача — выбрать одну группу датчиков для приоритетного мониторинга (цель — максимизировать среднее информативное значение при'
      '\n умеренной стабильности), какую группу вы бы рекомендовали и почему? (ответ обосновывается сравнениями средних и дисперсий)\n>>'
      ,types[np.argmin(sensors.var(ddof=1, axis=0)/sensors.mean(axis=0))], '<< наименьшее отношение дисперсии к среднему, т.е. наименьший разброс показаний' )
